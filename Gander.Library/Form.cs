using System.Xml.Serialization;

namespace Gander.Library
{
    public enum InsertedKeySource
    {
        /// <summary>
        /// Inserted key can be found at the very end of URL (i.e. MVC insert /Controller/Action/{key})
        /// </summary>
        UrlEnd,
        /// <summary>
        /// Inserted key can be found in the URL by regular expression
        /// </summary>
        UrlRegex,
        /// <summary>
        /// Key is embedded in the page somewhere within a span element
        /// </summary>
        Span,
        /// <summary>
        /// Inserted key must be queried via @@IDENTITY or some such (not necessarily reliable)
        /// </summary>
        Query
    }

    /// <summary>
    /// Describes an interaction with an HTML form by navigating to it, setting one or more fields and then submitting
    /// </summary>
    public class Form
    {
        /// <summary>
        /// URL containing the form to submit
        /// </summary>
        [XmlAttribute("url")]
        public string Url { get; set; }

        /// <summary>
        /// Enables Gander to find the form on a page by its action attribute of the HTML form element
        /// </summary>
        [XmlAttribute("action")]
        public string ElementAction { get; set; }

        /// <summary>
        /// Enables Gander to find the form on a page by the Id attribute of the HTML form element
        /// </summary>
        [XmlAttribute("id")]
        public string ElementId { get; set; }

        /// <summary>
        /// After a record is inserted, where can I find the key to the database record?
        /// </summary>
        public InsertedKeySource InsertedKeySource { get; set; } = InsertedKeySource.UrlEnd;

        /// <summary>
        /// Regex that parses the URL for the inserted key, or the element ID of the span containing the inserted key
        /// </summary>
        public string InsertedKeySelector { get; set; }

        /// <summary>
        /// Records to update or insert
        /// </summary>
        public Record[] Records { get; set; }

        public class Record
        {
            /// <summary>
            /// Key value for this record in the database. Leave null to indicate an insert
            /// </summary>
            [XmlAttribute("key")]
            public object Key { get; set; }

            public Field[] Fields { get; set; }

            /// <summary>
            /// Value generated by an insert
            /// </summary>
            [XmlIgnore]
            public object InsertedKey { get; set; }
        }

        public class Field
        {
            [XmlAttribute("name")]
            public string Name { get; set; }

            [XmlAttribute("value")]
            public string Value { get; set; }
        }
    }
}